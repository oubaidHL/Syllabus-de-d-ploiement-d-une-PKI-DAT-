---
- name: Remove old Docker apt source list if exists
  become: true
  file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent

- name: Create /etc/apt/keyrings directory for Docker
  become: true
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker official GPG key (docker.asc)
  become: true
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker repository
  become: true
  apt_repository:
    repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    filename: docker
    state: present
    update_cache: yes

- name: Update apt package index
  become: true
  apt:
    update_cache: yes

- name: Install prerequisite packages
  become: true
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - git
    state: present
    update_cache: yes

- name: Install Docker packages
  become: true
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Ensure Docker service is started and enabled
  become: true
  service:
    name: docker
    state: started
    enabled: yes

- name: Add user '{{ ansible_user }}' to docker group
  become: true
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Clone the PKI project repo
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ clone_dest }}"
    version: main
    force: yes
    update: yes

- name: Remove all files and folders except 'app' in clone_dest
  become: true
  shell: |
    shopt -s extglob
    cd "{{ clone_dest }}"
    rm -rf !('app')
  args:
    executable: /bin/bash
